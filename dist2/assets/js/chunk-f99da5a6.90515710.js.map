{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./src/views/ec/Echarts.vue?ba35","webpack:///src/views/ec/Echarts.vue","webpack:///./src/views/ec/Echarts.vue?a446","webpack:///./src/views/ec/Echarts.vue","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["_util","__webpack_require__","each","createHashMap","SeriesModel","createListFromArray","_default","extend","type","dependencies","visualColorAccessPath","getInitialData","option","ecModel","source","this","getSource","setEncodeAndDimensions","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","data","getData","indices","eachActiveState","theActiveState","dataIndex","push","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","show","inactiveOpacity","activeOpacity","lineStyle","width","opacity","emphasis","progressive","smooth","animationEasing","seriesModel","encodeDefine","parallelModel","getComponent","get","dimensions","axisDim","dataDimIndex","convertDimNameToNumber","set","dimName","replace","module","exports","zrUtil","VisualMapView","graphic","_symbol","createSymbol","layout","helper","PiecewiseVisualMapView","doRender","thisGroup","group","removeAll","visualMapModel","textGap","textStyleModel","textFont","getFont","textFill","getTextColor","itemAlign","_getItemAlign","itemSize","viewData","_getViewData","endsText","showLabel","retrieve","renderItem","item","piece","itemGroup","Group","onclick","bind","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","getValueState","add","Text","style","x","y","text","textVerticalAlign","textAlign","_renderEndsText","viewPieceList","box","renderBackground","positionGroup","pieceIndex","onHoverLink","method","hoverLink","api","dispatchAction","batch","convertDataIndex","findTargetDataIndices","on","modelOption","orient","getItemAlign","align","map","getPieceList","index","inverse","reverse","slice","shapeParam","getControllerVisual","selected","clone","newKey","getSelectedMapKey","selectedMode","o","key","from","uid","visualMapId","id","echarts","registerAction","event","update","createListSimply","_model","defaultEmphasis","FunnelSeries","extendSeriesModel","init","superApply","arguments","legendDataProvider","getRawData","_defaultLabelLine","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","getDataParams","params","superCall","valueDim","mapDimension","sum","getSum","percent","toFixed","$vars","legendHoverLink","left","top","right","bottom","minSize","maxSize","sort","gap","funnelAlign","position","length","itemStyle","borderColor","borderWidth","dataToCoordSize","dataSize","dataItem","dimIdx","val","halfSize","p1","p2","Math","abs","dataToPoint","rect","getBoundingRect","height","coord","size","BoundingRect","parseGeoJson","View","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","geoFixFuncs","Geo","name","geoJson","specialAreas","nameMap","call","_nameCoordMap","loadGeoJson","doConvert","methodName","finder","value","geoModel","getReferringComponents","prototype","constructor","containCoord","regions","i","contain","e","message","regionsMap","regionName","hasOwnProperty","addGeoCoord","center","specialArea","transformTo","_regionsMap","_rect","fixFunc","rawTransformable","_rawTransformable","transform","calculateTransform","decomposeTransform","scale","updateTransform","_updateTransform","getRegion","getRegionByCoord","geoCoord","getGeoCoord","regionRect","union","noRoam","out","convertToPixel","curry","convertFromPixel","mixin","gridModel","axisModel","opt","grid","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","axisPosition","dim","getRect","rectBound","idx","onZero","axisOffset","posBound","onZeroCoord","toGlobalCoord","dataToCoord","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","labelInside","labelRotate","z2","extendComponentView","render","Rect","shape","defaults","fill","getItemStyle","silent","registerPreprocessor","xAxis","yAxis","updateViewOnPan","controllerHost","dx","dy","target","pos","dirty","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","newZoom","zoom","zoomMin","zoomMax","Infinity","zoomScale","ComponentModel","ComponentView","_sourceHelper","detectSourceFormat","_sourceType","SERIES_LAYOUT_BY_COLUMN","seriesLayoutBy","sourceHeader","optionUpdated","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","minRunLength","n","r","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","t","binaryInsertionSort","start","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","offset","tmp","m","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","pushRun","_runStart","_runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","k","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","Error","customCursor","customDest","remaining","ts","minRun","force","windingLine","EPSILON","isAroundEqual","a","b","points","w","p","p0","Clip","color","isArrayLike","arraySlice","Array","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len","len2","j","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","isNaN","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","ret","rgba2String","rgba","floor","join","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","parse","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","life","loop","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","during","callback","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","self","clipCount","animation","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","cb","getClips","Model","linkList","List","createDimensions","TreeNode","hostTree","depth","parentNode","children","viewChildren","Tree","hostModel","levelOptions","leavesOption","root","_nodes","levelModels","levelDefine","leavesModel","addChild","child","node","isRemoved","eachNode","options","context","isString","order","suppressVisitSub","attr","updateDepthAndHeight","getNodeById","getId","res","contains","getAncestors","includeSelf","ancestors","getValue","dimension","getDimension","setLayout","merge","setItemLayout","getLayout","getItemLayout","getModel","path","itemModel","getItemModel","levelModel","getLevelModel","isExpand","getLeavesModel","setVisual","setItemVisual","getVisual","ignoreParent","getItemVisual","isAncestorOf","parent","isDescendantOf","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","tree","levels","leaves","listData","dimMax","buildHierarchy","dataNode","isArray","dimensionsInfo","coordDimensions","dimensionsCount","list","initData","mainData","struct","structAttr","_config","__DEV__","VisualMapModel","VisualMapping","visualDefault","_number","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemWidth","itemHeight","itemSymbol","pieceList","categories","splitNumber","itemGap","newOption","isInit","_pieceList","resetExtent","mode","_mode","_determineMode","resetMethods","_resetSelected","resetVisual","mappingOption","state","mappingMethod","dataExtent","getExtent","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","has","obj","visualType","isObject","pieces","v","exists","stateList","apply","thisOption","hasSel","setSelected","findPieceIndex","result","eachTargetSeries","dataIndices","getDataDimension","pIdx","seriesId","pieceInterval","interval","getVisualMeta","getColorVisual","stops","outerColors","edge","unshift","curr","setStop","valueState","precision","parseInt","splitStep","close","formatValueText","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","names","retrieveVisuals","edgeSymbols","zrColor","eventUtil","env","formatUtil","toCamelCase","vendors","gCssText","assembleTransition","duration","transitionCurve","transitionText","vendorPrefix","assembleFont","cssText","fontSize","round","assembleCssText","tooltipModel","transitionDuration","backgroundColor","padding","canvasSupported","toHex","borderName","camelCase","normalizeCssArray","TooltipContent","container","wxa","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","setTimeout","isShow","parallelVisual","registerVisual","preprocessor","candlestickVisual","candlestickLayout","registerLayout","Axis","TimelineAxis","coordExtent","axisType","model","getLabelModel","isHorizontal","inherits","_graphic","subPixelOptimize","createRenderPlanner","parsePercent","retrieve2","LargeArr","Float32Array","seriesType","plan","reset","candleWidth","calculateCandleWidth","cDimIdx","vDimIdx","coordDims","cDim","vDims","openDim","closeDim","lowestDim","highestDim","isSimpleBox","progress","pipelineContext","large","largeProgress","normalProgress","next","axisDimVal","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","ends","addBodyEnd","subPixelOptimizePoint","sign","getSign","initBaseline","brushRect","makeBrushRect","NaN","point","point1","point2","pmin","pmax","tmpIn","tmpOut","extent","baseAxis","getBaseAxis","bandWidth","getBandWidth","barMaxWidth","barMinWidth","barWidth","GestureMgr","_track","dist","pointPair","sqrt","recognize","_doTrack","_recognize","clear","touches","trackItem","touch","clientToLocal","zrX","zrY","eventName","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchScale","isFinite","pinchCenter","pinchX","pinchY","Diff","buildValues","diff","components","newArr","oldArr","componentPos","componentLen","newPos","oldPos","component","removed","added","clonePath","equals","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","pushComponent","last","commonCount","tokenize","arrayDiff","RoamController","roamHelper","_cursorHelper","onIrrelevantElement","getFixedItemStyle","areaColor","updateMapSelectHandler","mapDraw","mapOrGeoModel","fromView","off","_mouseDownFlag","__regions","action","mainType","region","updateMapSelected","eachChild","otherRegionEl","trigger","isSelected","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","draw","payload","isGeo","eachComponent","subType","mapSeries","getHostGeoModel","geo","groupNewProp","childAt","updateProps","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","paths","dataIdx","regionModel","getRegionModel","itemStyleModel","hoverItemStyleModel","hoverItemStyle","labelModel","hoverLabelModel","indexOfName","visualColor","geometries","geometry","Polygon","exterior","interiors","setStyle","strokeNoScale","culling","hoverShowLabel","isDataNaN","itemLayout","labelFetcher","query","textEl","setLabelStyle","hoverStyle","labelDataIndex","defaultText","useInsideStyle","setItemGraphicEl","eventData","componentType","geoIndex","componentIndex","groupRegions","setHoverStyle","hoverSilentOnTouch","_updateController","remove","dispose","controller","getZoom","enable","makeActionBase","mouseX","mouseY","originX","originY","traverse","setPointerChecker","getViewRectAfterRoam","matrix","vector","mIdentity","identity","isNotAroundZero","Transformable","opts","origin","transformableProto","needLocalTransform","parentHasTransform","create","getLocalTransform","mul","copy","invTransform","invert","setTransform","ctx","dpr","restoreTransform","tmpTransform","sx","sy","atan2","getGlobalScale","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","rotate","Displayable","imageHelper","ZImage","brush","prevEl","src","image","_image","createOrUpdateImage","onload","isImageReady","aspect","sWidth","sHeight","drawImage","drawRectText","eachSeriesByType","graph","getGraph","minValue","maxValue","nodeValue","mapping","mapValueToColor","mapValueToVisual","customColor","layoutUtil","LegendView","WH","XY","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","removeClipPath","__rectSize","renderInner","legendModel","me","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","icon","createIcon","getOrient","_pageGo","font","layoutInner","contentGroup","containerGroup","orientIdx","wh","hw","yx","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","pageButtonPosition","mainRect","clipShape","setClipPath","invisible","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","scrollDataIndex","legendId","canJump","childOfName","cursor","pageText","pageFormatter","current","total","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","xy","__legendDataIndex","ceil","itemRect","itemLoc","startIdx","winRect","getItemRect","intersect","startItem","startRect","ParallelAxis","axisIndex","makeInner","getDataItemValue","_referHelper","getCoordSysDefineBySeries","isTypedArray","Source","assert","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","inner","datasetModel","sourceFormat","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","dimensionsDefine","getDatasetModel","datasetOption","completeResult","completeBySourceData","encode","makeDefaultEncode","startIndex","dimensionsDetectCount","normalizeDimensionsDefine","findPotentialName","potentialNameDimIndex","arrayRowsTravelFirst","objectRowsCollectDimensions","colArr","value0","displayName","exist","maxLoop","firstIndex","coordSysDefine","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","thisData","datasetIndex","guessOrdinal","dimIndex","sample","detectValue","row","Line","vec2","curveUtil","EffectLine","lineData","seriesScope","createLine","_updateEffectSymbol","effectLineProto","effectModel","symbolType","symbol","_symbolType","setColor","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","ignore","updateAnimationPoints","getLineLength","_period","stopAnimation","__t","animate","updateSymbolPosition","__p1","__cp1","__p2","updateData","cp1","quadraticAt","quadraticDerivativeAt","tx","ty","updateLayout","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","throttleType","throttleDelay","brushSelected","doDispatch","fn","createOrUpdate","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","area","brushType","selectors","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","isFunction","bSelector","sel","brushModelNotControll","brushModel","seriesIndex","seriesIndices","indexOf","bindSelector","selFn","elType","setBrushOption","brushOption","brushTargetManager","setInputRanges","areas","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","boundingRect","boundingRectBuilders","visualMappings","createVisualMappings","linkOthers","brushed","stepAParallel","hasAxisBrushed","stepAOthers","controlSeries","eachSeries","seriesBrushSelected","applyVisual","lineX","noop","lineY","getBoundingRectFromMinMax","polygon","minMax","rg","visualSymbol","layoutPoints","modelUtil","getSeriesByIndex","queryDataIndex","getItemGraphicEl","getTooltipPosition","getValues","_labelHelper","getDefaultLabel","SymbolClz","symbolProto","getSymbolSize","symbolSize","getScale","driftSymbol","drift","_createSymbol","keepAspect","symbolPath","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","draggable","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","symbolRotate","symbolOffset","hoverAnimation","cursorStyle","hasItemOption","getShallow","elStyle","symbolInnerColor","liftZ","z2Origin","__z2Origin","useNameLabel","getLabelDefaultText","getName","isRectText","autoColor","isAnimationEnabled","onEmphasis","incremental","ratio","animateTo","onNormal","fadeOut","keepLabel","symbolUtil","normalizeSymbolSize","extendChartView","polar","oldData","_data","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","pt","cx","cy","polyline","Polyline","newIdx","oldIdx","execute","eachItemGraphicEl","getLineStyle","stroke","areaStyleModel","hoverAreaStyleModel","polygonIgnore","isEmpty","parentModel","hoverPolygonIgnore","getAreaStyle","itemHoverStyle","labelHoverModel","labelDimIndex","AxisBuilder","AxisView","axisBuilderAttrs","selfBuilderAttrs","axisPointerClass","radiusAxisModel","radiusAxis","angleAxis","getAngleAxis","ticksCoords","getTicksCoords","axisAngle","radiusExtent","layoutAxis","axisBuilder","getGroup","isBlank","_splitLine","splitLineModel","lineStyleModel","lineColors","lineCount","splitLines","colorIndex","Circle","mergePath","_splitArea","splitAreaModel","areaColors","splitAreas","prevRadius","Sector","r0","startAngle","endAngle","axisHelper","axisModelCommonMixin","_layout","getLayoutRect","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","createList","dataStack","createScale","isInstance","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","ArrayCtor","m1","m2","out0","out1","out2","out3","out4","out5","translate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","axisDefault","valueAxisDefault","valueAxis","defaultsShow","RadarModel","extendComponentModel","boundaryGap","axisLine","axisTick","axisLabel","nameTextStyle","showName","nameFormatter","nameGap","triggerEvent","indicatorModels","indicatorOpt","iNameTextStyle","nameLocation","indName","getIndicatorModels","radius","splitLine","splitArea","indicator","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","cp","BaseBarSeries","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","register","records","initGlobalListeners","record","useHandler","eventType","dis","makeDispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","Scale","OrdinalMeta","scaleProto","OrdinalScale","ordinalMeta","_ordinalMeta","_extent","getOrdinal","rank","normalize","getTicks","ticks","getLabel","unionExtentFromData","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","niceExtent","MarkerModel","tooltip","ChartView","Path","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","SKIP_PROPS","CandlestickView","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","hasValue","createNormalBox","setBoxCommon","createLarge","NormalBoxPath","buildPath","__simpleBox","lineTo","closePath","transInit","normalItemStyleModel","LargeBoxPath","__sign","largePoints","elP","elN","setLargeStyle","suffix","Style","Element","RectText","__clipPaths","__dirty","dragging","rectHover","inplace","beforeBrush","afterBrush","rectContain","__zr","refresh","animateStyle","attrKV","_vm","_h","$createElement","_c","_self","staticStyle","attrs","staticRenderFns","Echartsvue_type_script_lang_js_","methods","mounted","myChart","getElementById","colors","title","axisPointer","legend","alignWithLabel","formatter","seriesData","series","xAxisIndex","setOption","ec_Echartsvue_type_script_lang_js_","Object","componentNormalizer","__webpack_exports__","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","midAngle","PiePiece","sector","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","setShape","animationType","lineJoin","_updateLabel","labelText","labelLayout","linePoints","labelLineModel","labelLineHoverModel","inside","verticalAlign","PieView","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","clockwise","clipPath","containPoint","simpleLayout","simpleLayoutEdge","eachEdge","curveness","node1","node2","Polar","_axisHelper","CoordinateSystem","resizePolar","polarModel","getRadiusAxis","updatePolarScale","onBand","setAxis","polarCreator","polarList","findAxisModel","angleAxisModel","queryComponents","getSeriesStackId","getAxisKey","barLayoutPolar","lastStackCoords","barWidthAndOffset","calRadialBar","filter","getSeriesByType","isSeriesFiltered","stackId","columnLayoutInfo","columnOffset","columnWidth","getOtherAxis","barMinHeight","barMinAngle","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","dataToRadius","angle","dataToAngle","angleSpan","barSeries","columnsMap","axisExtent","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","maxWidth","barGap","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","stack","lastColumn","widthSum","mathCos","mathSin","selectableMixin","geoCreator","GeoModel","layoutMode","getFilledRegions","_optionModelMap","reduce","optionModelMap","regionOpt","updateSelectedMap","aspectScale","boundingCoords","scaleLimit","getFormattedLabel","status","setZoom","setCenter","arrySlice","Eventful","_$handlers","one","h","isSilent","newList","l","args","argLen","splice","triggerWithContext","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","concat","getCoordinateSystems","coordinateSystemCreator","curve","bbox","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min2","max2","mathMin","mathMax","mathSqrt","mathAbs","hasTypedArray","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","getContext","beginPath","addData","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","anticlockwise","arcTo","x0","y0","toStatic","setLineDash","lineDash","lineDashSum","setLineDashOffset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","features","ctor","_format","encodeHTML","layoutInfo","treeOption","treeDepth","expandAndCollapse","expandTreeDepth","initialTreeDepth","getRawDataItem","collapsed","formatTooltip","realRoot","animationDuration","animationDurationUpdate","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","mathFloor","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","getFullYear","getMonth","getDate","minInterval","maxInterval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","yearStep","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","useUTC","clipOverflow","step","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","Component","parallelAxisIndex","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","mergeOption","_initDimensions","setAxisExpand","axisModels","dependentModels","parallelAxis","wx","getSystemInfoSync","browser","os","svgSupported","touchEventsSupported","worker","navigator","detect","userAgent","ua","firefox","match","ie","weChat","test","version","SVGRect","pointerEventsSupported","hierNode","defaultAncestor","ancestor","prelim","modifier","change","shift","thread","pop","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","apportion","secondWalk","nodeX","defaultSeparation","radialCoordinate","radialCoor","getViewRect","getBoxLayoutParams","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","pathTool","colorTool","Image","Ring","BezierCurve","Arc","LinearGradient","RadialGradient","IncrementalDisplayable","EMPTY_OBJ","extendShape","extendPath","pathData","extendFromString","makePath","createFromString","centerGraphic","resizePath","makeImage","imageUrl","img","pathRect","subPixelOptimizeLine","param","lineWidth","subPixelOptimizeRect","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","removeHover","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","showNormal","showEmphasis","normalStyleText","emphasisStyleText","setTextStyle","textStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","defaultColor","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontFamily","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","gTextStyleModel","trim","animateOrSetProps","isUpdate","animatableModel","animationEnabled","postfix","animationDelay","getAnimationDelayParams","getTransform","mat","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap1","getElMap","isGroup","anid","oldEl","newProp","getAnimatableProps","g","elMap","clipPointsByRect","clipRectByRect","targetRect","iconStr","eventTool","throttle","DataZoomView","sliderMove","linearMap","asc","DEFAULT_LOCATION_EDGE_GAP","DEFAULT_FRAME_BORDER_WIDTH","DEFAULT_FILLER_SIZE","HORIZONTAL","VERTICAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","dataZoomModel","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","layoutParams","getLayoutParams","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","eachTargetAxis","dimNames","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","getOtherDim","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","handleIndex","bRect","handleColor","getPercentRange","viewExtent","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","lastRange","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","barTransform","textPoint","labelFormatter","labelPrecision","getPixelPrecision","valueStr","showOrHide","changed","realtime","_dispatchZoomAction","localPoint","offsetX","offsetY","dataZoomId","getTargetCoordInfo","coordInfoList","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","link","addEdge","nodeData","coordSysCtor","dimensionNames","edgeData","datas","datasAttr","IndicatorAxis","getScaleExtent","Radar","radarModel","_indicatorAxes","indicatorModel","indicatorAxis","resize","getIndicatorAxes","indicatorIndex","coordToPoint","pointToData","closestAxis","radian","minRadianDiff","closestAxisIdx","coodToData","viewWidth","viewHeight","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","pow","log","LN10","f","rawExtent","fixedMin","fixedMax","getInterval","setInterval","nicedSplitNumber","halfSplitNumber","radarList","radar","categoryFilter","categoryVisual","edgeVisual","circularLayout","forceLayout","createView","registerProcessor","registerCoordinateSystem","dataFormatMixin","addCommas","fillLabel","extraOpt","mergeDefaultAndTheme","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","getRawValue","formattedValue","html","getSortedIndices","valueArr","mapArray","isAscending","textX","textY","labelPosition","isLabelInside","labelLineLen","viewRect","sizeExtent","getLinePoints","offY","nextIdx","_poly","DataDiffer","_layers","layerSeries","getLayerSeries","keyGetter","dataDiffer","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","points1","textLayout","margin","layerGroup","stackedOnPoints","stackedOnSmooth","smoothConstraint","createGridClipShape","rectEl","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","processSeries","seriesOpt","markPoint","markLine","markArea","links","mpData","mlData","breadcrumb","toArr","toObj","isTheme","axes","axisName","axisOpt","parallel","parallelOpt","calendar","calendarOpt","radarOpt","geoOpt","regionObj","timeline","timelineOpt","toolbox","toolboxOpt","feature","featureOpt","properties","excludes","includes","PI2","RADIAN","minAngle","validDataCount","unitRadian","roseType","stillShowZeroSum","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","paletteScope","categoriesData","getCategoriesData","categoryNameIdxMap","getColorFromPalette","category","keep","dataView","lang","dataZoom","back","magicType","line","bar","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","treemap","boxplot","candlestick","heatmap","lines","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","isDataItemOption","DefaultDataProvider","dimSize","seriesDataToSource","_source","_offset","_dimSize","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","dims","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","dimInfo","dimType","parseAndCollect","retrieveRawValue","getProvider","getDimensionInfo","retrieveRawAttr","fixShadow","STYLE_COMMON_PROPS","createLinearGradient","global","canvasGradient","createRadialGradient","lineDashOffset","shadowBlur","shadowOffsetX","shadowOffsetY","textRect","transformText","textOrigin","truncate","blend","prevStyle","firstDraw","prop","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","colorStops","addColorStop","styleProto","hasKeys","supplementVisualOption","mappings","createMappings","visualData","isValidType","__hidden","__alphaForOpacity","Creater","replaceVisualOption","keys","scope","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","prepareVisualTypes","incrementalApplyVisual","getTargetSeries","seriesModelMap","modifyOutputEnd","overallReset","filterData","percentRange","getDataPercentWindow","valueRange","setRawRange","startValue","endValue","debugMode","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","coordDimIndex","isExtraCoord","mayLabelDimType","defaultTooltip","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","getDimensionTypeByAxis","barPolar","borderColorQuery","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","getMarkerPosition","clampData","offsetIndex","progressiveChunkMode","DEFAULT_BAR_BOUND","ContinuousModel","calculable","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","resetItemSize","auto","getSelected","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","getAxis","markerHelper","LineDraw","MarkerView","markLineTransform","mlModel","mlType","valueDataDim","axisInfo","getAxisInfo","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","dataTransform","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","containData","markLineFilter","dataFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","markLineModel","fromData","__from","toData","__to","markerGroupMap","renderSeries","lineDrawMap","lineDraw","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","coordDimsInfos","optData","dimValueGetter","util","_event","Dispatcher","requestAnimationFrame","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","addAnimator","clips","removeAnimator","_update","getTime","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","isFinished","sankeyLayout","sankeyVisual","_echarts","_export","DATAS","MAIN_DATA","main","linkAll","TRANSFERABLE_METHODS","wrapMethod","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","dataType","isMainData","linkSingle","cloneShallow","getLinkedData","Region","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","coordModel","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","zoomLock","disabled","roamControllerOpt","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","oldX","oldY","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","angleExtent","pointToCoord","singleAxis","_dimensionHelper","coordSysDimDefs","registeredCoordSys","axisMap","getDimensionsInfo","hasNameEncode","dimInfoList","generateCoord","categoryAxisModel","stackCalculationInfo","setCalculationInfo","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","sampleItem","firstDataNotNull","isNumeric","_helper","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","BarView","cartesian","coordSysRect","coordSysExtent","categoryDim","symbolMeta","getSymbolMeta","createBar","updateCommon","newIndex","oldIndex","pictorialShapeStr","getShapeStr","__pictorialShapeStr","updateBar","__pictorialSymbolMeta","removeBar","animationModel","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolRepeatDirection","prepareBarLength","prepareSymbolSize","boundingLength","pxSign","prepareLineWidth","symbolScale","prepareLayoutInfo","valueLineWidth","repeatCutLength","output","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","categorySize","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","SunburstPiece","ROOT_TO_NODE_ACTION","SunburstView","that","virtualRoot","newRoot","getViewRoot","renderLabelForZeroData","newChildren","oldChildren","_oldChildren","dualTravel","renderRollUp","highlightPolicy","unhighlight","virtualPiece","getKey","processNode","newId","oldId","newNode","oldNode","doRenderNode","removeNode","viewRoot","_onclickEvent","_rootToNode","_initEvents","targetFound","nodeClick","linkTarget","open","targetNode","treeRoot","transformPath","cc","vMag","vRatio","u","vAngle","acos","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathProxyFromString","cs","RegExp","prevCmd","arr","split","cpx","cpy","str","c","charAt","parseFloat","ctlPtx","ctlPty","createPathOptions","pathProxy","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","TimelineView","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","horizontal","vertical","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","labelRotation","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","fromPos","boundIdx","newGroup","_renderAxisLine","lineCap","_renderAxisTick","tickCoord","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","labels","getViewLabels","labelItem","tickValue","normalLabelModel","formattedLabel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","makeIcon","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","onCreate","pointer","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","handleFrame","trans","axisCoord","nextIndex","objPath","noAnimation","DataZoomModel","SliderZoomModel","dataBackground","areaStyle","fillerColor","handleIcon","handleSize","handleStyle","showDetail","RADIAN_EPSILON","_trim","domain","clamp","subDomain","subRange","all","returnStr","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","pi2","isRadianAroundZero","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nf","exponent","littleThan","currClose","_dataProvider","getTooltipMarker","formatTpl","DIMENSION_LABEL_REG","rawValue","rawDataIndex","componentSubType","marker","labelProp","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","Displayble","IncrementalDisplayble","_temporaryDisplayables","_cursor","notClear","clearDisplaybles","addDisplayable","displayable","notPersistent","addDisplayables","displayables","eachPendingDisplayable","childRect","localPos","setCurrentIndex","isIndexMax","setPlayState","resetOption","preventIncremental","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","AxisProxy","eachAxisDim","yAxisIndex","filterMode","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","_rangePropMode","rawOption","retrieveRaw","doInit","_setDefaultThrottle","updateRangeUse","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","hostedBy","getRangePropMode","rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","shapes","useHandle","_createBarGroup","outOfRange","createPolygon","inRange","_dragHandle","getTextRect","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","isEnd","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","sampleNumber","currValue","_showIndicator","cursorValue","textValue","rangeSymbol","halfHoverLinkSize","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","isTargetSeries","element","isRange","extentMax","zrender","timsort","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","_throttle","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","PROCESSOR","FILTER","STATISTIC","LAYOUT","GLOBAL","CHART","COMPONENT","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","toLowerCase","MessageCenter","ECharts","dom","theme","themeStorage","_dom","defaultRenderer","renderer","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_pendingActions","_onframe","bindRenderedEvent","setAsPrimitive","echartsProto","doConvertPixel","coordSysList","parseFinder","_disposed","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","unfinished","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","getDom","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","getOption","getDevicePixelRatio","getRenderedCanvas","pixelRatio","getSvgDataUrl","storage","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","view","__viewId","url","getType","toDataURL","getConnectedDataURL","groupId","MAX_NUMBER","connectedGroups","canvasList","instances","chart","canvas","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","containPixel","models","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","coordSysMgr","restoreData","clearColorPalette","setBackgroundColor","colorArr","stringify","performPostUpdateFuncs","ecIns","componentDirtyList","componentView","__alive","seriesDirtyMap","chartView","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","restorePipelines","prepareStageTasks","prepareView","updateDirectly","condition","excludeSeriesId","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","payloads","batched","eventObj","eventObjBatch","isHighDown","batchItem","sub","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","renderTask","renderComponents","dirtyList","updateZ","updatePayload","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","elCount","blendMode","ecInstance","getComponentByElement","modelInfo","eveName","actionType","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","otherChart","otherCharts","existInstance","getInstanceByDom","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processor","normalizeRegister","registerPostUpdate","postUpdateFunc","getCoordinateSystemDimensions","layoutTask","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","setCanvasCreator","creator","$override","registerMap","mapName","JSON","Function","getMap","dataTool","___ec_export","_core","textContain","textHelper","arrayJoin","NONE","mathRound","degree","round4","isAroundZero","pathHasFill","isText","pathHasStroke","svgEl","attrXLink","setAttributeNS","bindStyle","strokeWidth","strokeScale","miterLimit","pathDataToString","dataLength","cmdStr","nData","dThetaPositive","isCircle","svgPath","__svgEl","pathStr","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","svgText","tmpRect","normalizeTextStyle","textSvgEl","__textSvgEl","distance","DEFAULT_FONT","getVerticalAlignForSvg","lineHeight","adjustTextPositionOnRect","textLines","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","createTextNode","removeChild","scaleAndAdd","lenSquare","lengthSquare","div","dot","s","distanceSquare","distSquare","negate","lerp","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","op","ep","fname","substr","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","B","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","Gradient","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","triggerOn","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","getAxisRawValue","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","cbTicket","contentSize","vAlign","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","gapH","gapV","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","domWidth","domHeight","rectWidth","rectHeight","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","parsePath","thisParentModel","Ctor","setReadOnly","customizeGetParent","Single","singles","actionTypes","handleRootToNode","types","targetInfo","retrieveTargetInfo","originViewRoot","aboveViewRoot","resetViewRoot","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","HIGHLIGHT_ACTION","handleHighlight","UNHIGHLIGHT_ACTION","handleUnhighlight","_createPolyline","polylineProto","_updateCommonStl","hoverLineStyle","legendSelectActionHandler","selectedMap","isToggleSelect","legendData","isItemSelected","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","SymbolDraw","EffectSymbol","pointsLayout","_symbolDraw","effectSymbolDraw","_updateGroupTransform","getRoamTransform","HeatmapLayer","getIsInPiecewiseRange","dataSpan","lastIndex","getIsInContinuousRange","isGeoCoordSys","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","_renderOnGeo","itemStyleQuery","hoverItemStyleQuery","labelQuery","hoverLabelQuery","coordSysType","dataDims","dataToRect","contentShape","inRangeVisuals","targetVisuals","outOfRangeVisuals","hmLayer","_hmLayer","roamTransform","lng","lat","isInRange","getNormalizer","getColorMapper","curveTool","v3","v2DistSquare","intersectCurveCircle","curvePoints","radiusSquare","_t","nextDiff","tmp0","quadraticSubdivide","pts","pts2","__original","originalPoints","globalCoord","AxisPointerModel","snap","triggerTooltip","shadowStyle","shadowColor","axisModelCreator","AxisModel","gridIndex","gridId","getAxisType","extraOption","_roamHelper","updateCenterAndZoom","seriesGroup","interactionMutex","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","controlType","disable","isDragging","isPinching","_pinching","notLeftMouse","checkKeyBinding","gestureEvent","isTaken","wheelDelta","roamController","setting","_vector","v2Create","mathPow","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","onet","cubicDerivativeAt","cubicRootAt","roots","t1","disc","K","discSqrt","Y1","Y2","T","ASqrt","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","d1","d2","quadraticRootAt","quadraticExtremum","divider","quadraticProjectPoint","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","targetShape","makeLineShape","getAxisDimIndex","shadow","makeRectShape","registerAxisPointerClass","fixClipWithShadow","unitX","unitY","ZText","MARK_UNUSED","MARK_USED","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","addDom","removeDom","getDoms","doms","tagName","tags","markAllUnused","markUsed","removeUnused","getSvgProxy","getTextSvgElement","getSvgElement","SingleAxis","_init","axisPointerEnabled","_adjustAxis","_updateAxisTransform","coordBase","extentSum","toLocalCoord","getAxes","getTooltipAxes","baseAxes","coordToData","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","performRawSeries","isLargeRender","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","FunnelPiece","funnelPieceProto","opacityAccessPath","FunnelView","funnelPiece","GaugeSeries","dataOpt","offsetCenter","detail","dev","dataSelectableMixin","MapSeries","needsDrawMap","_createSelectableList","getMapType","_fillOption","seriesNames","otherIndex","originalData","showLegendSymbol","dataRangeHoverLink","NodeHighlightPolicy","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","getNodeColor","stateStyle","isNodeHighlighted","onHighlight","onDownplay","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","visualMetaList","getRootId","activeNode","policy","featureManager","saveAsImageLang","SaveAsImage","unusable","proto","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","tab","write","evt","bubbles","cancelable","dispatchEvent","colorPaletteMixin","mergeLayoutParam","_task","createTask","dataTask","dataTaskCount","dataTaskReset","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","newSeriesOption","task","getCurrentTask","setOutputEnd","outputData","multipleSeries","formatArrayValue","vertially","setEachItem","dimHead","valStr","tooltipDims","formatSingleValue","tooltipDimLen","isValueArr","colorEl","isNameSpecified","requestColorNum","coordDimToDataDim","getAxisTooltipData","pipeTask","getSeriesAutoName","nameArr","dataTaskProgress","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","smoothSpline","smoothBezier","controlPoints","cp2","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","edgeType","absorb","processSingleNode","isNodeAbsorded","isLinked","hasLink","edgeId","themeRiverLayout","baseY0","timeDim","layerPoints","singleLayer","base","computeBaseline","baseLine","ky","layerIndex","layerNum","pointNum","sums","temp","colorList","getBorderLineDash","ATTR","dataZoomInfo","store","giveStore","theDataZoomId","theCoordId","dataZoomInfos","cleanStore","createController","controllerParams","mergeControllerParams","newRecord","onPan","onZoom","wrapAndDispatch","getRange","typePriority","type_true","type_move","type_false","type_undefined","oneType","validPayloadTypes","targetNodeId","getPathToRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","r1","r2","r3","r4","_forceHelper","_simpleLayoutHelper","_circularLayoutHelper","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","rep","fixed","getEdgeByIndex","n1","n2","forceInstance","gravity","oldStep","getNodeByIndex","stopped","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","otherAxes","onZeroAxisIndex","canOnZeroToAxis","updateAxisTransform","axisExtentSum","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","xAxisModel","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","addAxis","isCartesian2D","axesModels","findAxesModels","axesTypes","grids","SankeyShape","cpx1","cpy1","cpx2","cpy2","halfExtent","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","dragX","dragY","localX","localY","Pattern","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","config","clearColor","motionBlur","lastFrameAlpha","__used","__drawIndex","__startIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","clearRect","__canvasGradient","getCanvasPattern","save","fillRect","globalImageCache","findExistImage","newImageOrSrc","cachedImgObj","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","_listComponent","makeBackground","_contentGroup","_backgroundEl","viewportSize","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","newline","inactiveColor","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","hitRect","formatterParams","legendIndex","dataName","CATEGORY_DEFAULT_VISUAL_INDEX","_normalizeData","normalizers","visualHandler","visualHandlers","_doMap","normalizeVisualRange","preprocessForPiecewise","preprocessForSpecifiedCategory","normalized","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","piecewise","getSpecifiedVisual","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","makeDoMap","symbolCfg","doMapToArray","hasSpecialVisual","originIndex","categoryMap","visualArr","setVisualToOption","doNotNeedPair","applyValue","sourceExtent","addVisualHandler","eachVisual","mapVisual","isPrimary","newVisual","newVal","hasVisual","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","isDomLevel2","addEventListener","MOUSE_EVENT_REG","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","isTouch","targetTouches","changedTouches","zrDelta","button","which","attachEvent","removeEventListener","detachEvent","preventDefault","stopPropagation","cancelBubble","returnValue","DEFAULT_SMOOTH","ParallelView","_dataGroup","dataGroup","makeSeriesScope","newDataIndex","addEl","updateElCommon","oldDataIndex","createLinePoints","taskParams","isEmptyValue","active","inactive","UNDEFINED","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareInvertedIndex","invertedIndices","getRawValueFromStore","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimensionsOnCoord","dimensionsSummary","nameList","notProvider","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","getIndices","thisCount","buffer","chunkStore","getByRawIndex","rawIdx","dimStore","_getFast","values","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","getCalculationInfo","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","dimensionInfoList","injectFunction","originalMethod","v2Distance","interpolate","isLoop","segs","w2","w3","TYPE_DELIMITER","IS_CONTAINER","checkClassType","RootClass","mandatoryMethods","$constructor","superClass","ExtendedClass","classBase","Clz","classAttr","enableClassManagement","entity","makeContainer","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","hasSubTypes","registerWhenExtend","originalExtend","ignoreSize","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textBaseline","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","createParallelIfNeeded","mergeAxisOptionFromParallel","hasParallelSeries","axisOption","parallelOption","isPolyline","isLarge","lineCoords","segCount","totalCoordsCount","getLineCoordsCount","getLineCoords","axisPointerModelHelper","_axisPointer","fixValue","updateAxisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","compatibleEC2","ec2Types","transferItem","controlStyle","itemStyleEmphasis","labelNormal","excludeLabelAttr","legendModels","findComponents","categoryNames","mapSymbolLayout","mapDataStatistic","createDataSelectAction","effectType","showEffectOn","rippleEffect","barItemStyle","coordinateSystemType","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","cartesian2d","animateProperty","animateTarget","isRadial","fixedLineWidth","getLineWidth","signX","signY","isPolar","getBarItemStyle","labelPositionOutside","rawLayout","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","_curve","containStroke","_l","registerSubTypeDefaulter","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","axisDataLen","scaleType","originalExtent","getCategories","setBlank","isBaseAxisAndHasBarSeries","barSeriesModels","adjustedScale","adjustScaleForOverflow","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","makeLabelFormatter","categoryTickStart","tpl","tick","realNumberScaleTicks","tickCount","categoryScaleExtent","axisLabelModel","unrotatedSingleRect","singleRect","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","guid","Handler","Storage","Painter","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","delInstance","rendererType","vml","handerProxy","getViewportRoot","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","eventHandler","_component","getUID","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","taskRecord","_pipelineMap","pCtx","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","modDataCount","modBy","dataLen","threshold","pipelineMap","head","tail","pipe","stageTaskMap","createSeriesStageTask","createOverallStageTask","__block","getUpstream","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createOnAllSeries","removeKey","overallTaskReset","overallProgress","createStub","stubReset","onDirty","stubOnDirty","agent","getSeries","upstreamContext","stubProgress","getDownstream","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","dataEach","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","PolarAxisPointer","animationThreshold","coordValue","labelPos","getLabelPosition","buildLabelElOption","innerTextLayout","makeSectorShape","geoCoordMap","Russia","United States","United States of America","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","themeRiverVisual","componentUtil","boxLayoutMixin","themeModel","newCptOption","fields","optList","Class","getDependencies","deps","enableSubTypeDefaulter","enableTopologicalTravel","v2ApplyTransform","TransformDummy","_roamTransformable","_center","_zoom","setBoundingRect","setViewRect","rawTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","rawTransformMatrix","defaultCenter","roamTransformable","_rawTransform","_layoutHelper","_oldTree","symbolNeedsDraw","updateNode","symbolEl","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","isLeft","rootLayout","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","arrayProto","nativeForEach","forEach","nativeFilter","nativeSlice","nativeMap","nativeReduce","typeStr","isPrimitive","isDom","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","baseClazz","clazzPrototype","F","memo","find","nodeType","ownerDocument","value1","retrieve3","value2","primitiveKey","HashMap","isArr","thisMap","visit","concatArray","newArray","eachAfter","eachBefore","newSnapshot","snapshot","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","nameRotate","nameTruncate","ellipsis","placeholder","showMinLabel","showMaxLabel","categoryAxis","deduplication","timeAxis","logAxis","logBase","idxMap","Uint32Arr","Float64Arr","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","effect","trailLength","autoPositionValues","targetValue","visualCluster","visualObj","controllerVisuals","visualMapping","positionElement","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","LineGroup","_ctor","lineDrawProto","doAdd","lineNeedsDraw","doUpdate","oldLineData","newLineData","itemEl","isPointNaN","isPersistent","_lineData","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","updateIncrementalAndHover","_clearIncremental","_incremental","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_mapDraw","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","other","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","items","assembleOtherSeries","vals","getContentFromModel","isTSVFormat","itemSplitRegex","parseTSVContents","tsv","tsvLines","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","substring","newSeriesOptList","needDrawText","renderText","getStroke","actionInfos","polarOptArr","polarNotRadar","polarOpt","polarIndex","radarIndex","foundAxisModel","layoutBox","boxLayoutParams","positions","fromPoints","bbWidth","bbHeight","viewCoordSys","BrushController","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","mount","_isZoomActive","featureModel","updateZoomBtnStatus","updateBackBtnStatus","handlers","unmount","nextActive","dataZoomSelectActive","retrieveAxisSetting","setIconStatus","zoomActive","include","setPanels","makePanelOpts","xAxisDeclared","yAxisDeclared","enableBrush","brushStyle","updateCovers","matchOutputRanges","coordRange","setBatch","findDataZoom","found","dzModel","dataZoomOpts","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","SHADOW_PROPS","coordSysLists","coordIndex","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","updateSymbolAndLabelBeforeLineUpdate","lineGroup","symbolFrom","symbolTo","invScale","pointAt","toPos","tangent","tangentAt","__position","halfPercent","__verticalAlign","__textAlign","_createLine","lineProto","beforeUpdate","visualOpacity","defaultLabelColor","rawVal","normalText","emphasisText","labelStyle","linePath","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","initBase","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","componentOption","topologicalTravel","_seriesIndicesMap","_seriesIndices","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesCount","assertSeriesInitialized","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","existComponent","graphicUtil","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","setKeyInfoToNewElOption","mergeNewElOptionToExist","setLayoutInfoToExist","$action","optionList","parentOption","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","__ecGraphicId","removeEl","existEl","existElParent","getCleanedElOption","LOCATION_PARAMS","isSetLoc","isSet","existElOption","newElParentOption","newElOptCopy","copyLayoutParams","existItem","hv","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","elOptionStyle","elOptionCleaned","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","boundingMode","bounding","straightLineProto","bezierCurveProto","isLine","defaultSymbolType","hasCallback","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","nest","nodeWidth","nodeGap","computeNodeValues","filteredNodes","iterations","layoutSankey","computeNodeBreadths","computeNodeDepths","computeEdgeDepths","getEdgeValue","remainEdges","indegreeArr","zeroIndegrees","nextNode","kx","indexEdge","nodeIndex","moveSinksRight","scaleNodeBreadths","nodesByBreadth","sortKeys","ascending","entries","initializeNodeDepth","resolveCollisions","relaxRightToLeft","relaxLeftToRight","kyArray","ky0","nodeDy","edgeDy","ascendingDepth","nodeY","weightedTarget","weightedSource","ascendingTargetDepth","ascendingSourceDepth","updateMarkerLayout","markPointModel","mpModel","symbolDrawMap","symbolDraw","sizeCalculable","CalendarModel","cellSize","dayLabel","firstDay","monthLabel","yearLabel","mergeAndNormalizeLayoutParams","raw","hvIdx","echartsAPIList","chartInstance","parallelAxisModel","setActiveIntervals","intervals","Parallel","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","fixExtentWithBands","nTick","fixOnBandTicksCoords","tickCategoryInterval","ticksLen","ticksItem","tickModel","getTickModel","getRotate","LegendModel","_updateData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","normalizeRadian","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","fromZero","extra","genName","optDimCount","pointsConverter","svgURI","createElementNS","x_","createGraphFromNodeEdge","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","getEdgeData","sourceName","targetName","focusNodeAdjacency","circular","rotateLabel","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","roam","nodeScaleRatio","polyHelper","stackResultDim","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","thisDelay","thisDebounce","debounceDelay","fnAttr","originFn","lastThrottleType","lastRate","markerModelKey","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationEasingUpdate","shadowTemp","orignalBrush","modified","clipPaths","roundNumber","_intervalPrecision","thisExtent","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fetch","fetchers","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","err","originalVal","dataColor","radarLayout","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","areaData","markAreaModel","areaGroupMap","polygonGroup","__data","ToolboxModel","featureName","Feature","showTitle","iconStyle","containLabel","_zrender","ITEM_STYLE_NORMAL","seriesItemStyleModel","levelItemStyles","travelTree","designatedVisual","viewRootAncestors","nodeModel","nodeLayout","isInView","thisNodeColor","nodeItemStyleModel","levelItemStyle","visuals","buildVisuals","borderColorSaturation","calculateColor","calculateBorderColor","buildVisualMapping","childVisual","visualName","getValueVisualDefine","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","childVisuals","mappingType","mapIdToIndex","hasXOrY","hasXAndY","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","markerTypeCalculator","average","baseDataDim","dataDimToCoordDim","RadiusAxis","radiusToData","_treeHelper","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","emptyItemWidth","upperLabel","gapWidth","visualDimension","visibleMin","childrenVisibleMin","completeTreeValue","setDefault","setLayoutInfo","idIndexMap","_idIndexMap","_idIndexMapCount","childValue","thisValue","globalColorList","hasColorDefine","modelColor","level0","mapType","mapLocation","safeLimit","largeLayout","unitAngle","x12","y12","_a","_b","_s","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","nodeScale","groupScale","groupZoom","roamZoom","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","maskColor","mask","animateShape","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","cp0","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","containerWidth","containerHeight","rootRect","viewAbovePath","rootSize","estimateRootSize","viewRootLayout","squarify","upperHeight","calculateRootPosition","prunning","hideChildren","thisLayout","halfGapWidth","upperLabelHeight","getUpperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","initChildren","rowFixedLength","best","score","worst","orderBy","overLeafDepth","statistic","filterByThreshold","isLeafRoot","orderedChildren","deletePoint","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","currNode","defaultSize","viewArea","currNodeValue","defaultPosition","targetCenter","clipRect","nodeInViewAbovePath","isAboveViewRoot","childClipRect","STACK_PREFIX","LARGE_BAR_MIN_WIDTH","getLayoutOnAxis","widthAndOffsets","doCalBarWidthAndOffset","isOnCartesian","isInLargeMode","seriesInfoList","seriesInfo","lastStackCoordsOrigin","isValueAxisH","getValueAxisStart","valueAxisHorizontal","valueDimIdx","valuePair","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","linkedNodesFinder","effectedModels","prepareDataCoordInfo","valueOrigin","valueStart","getValueStart","baseAxisDim","baseDataOffset","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","ClippathManager","updateDom","clipPathEl","svgProxy","cloneNode","_textDom","RadarSeries","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","lineContain","quadraticContain","LargeLineShape","findDataIndex","LargeLineDraw","largeLineProto","lineEl","_setCommon","isIncremental","funnelLayout","take","resourceKey","userKey","getStore","release","uKey","mapModel","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","__mapOriginalZ2","roundRectHelper","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","makeFont","renderRichText","renderPlainText","setCtx","contentBlock","__textCotentBlock","parsePlainText","outerHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","needDrawBg","needDrawBackground","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","parseRichText","drawRichText","contentWidth","lineTop","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","tokenStyle","isLineHolder","isPlainBg","onBgImageLoaded","blockHeiht","PointerPath","parsePosition","formatLabel","GaugeView","posInfo","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","tickLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","detailModel","linesLayout","linesVisual","vmlCore","comma","imageTransformPrefix","Z2","ZLEVEL_BASE","Z_BASE","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","String","rgb2Str","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","createNode","nPoint","brushVML","vmlRoot","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","onRemove","onAdd","appendRectText","isImage","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sw","sh","hasCrop","doc","vmlElStyle","hasRotation","transformFilter","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","DEFAULT_STYLE_NORMAL","fontStyleCache","fontStyleCacheCount","MAX_FONT_CACHE_SIZE","fontEl","getFontStyle","fontString","variant","fontVariant","family","body","ex","offsetWidth","fromTextEl","textLine","textPathEl","skewEl","textVmlEl","_textVmlEl","nextSibling","textpathok","textVmlElStyle","string","polygonContain","getLineSelectors","lineIntersectPolygon","xyIndex","inLineRange","layoutRange","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","extraCssText","crossStyle","AngleAxis","angleToData","percentPrecision","VISUAL_PRIORITY","resultVisual","visualMeta","concreteDim","opacityMap","itemOpacity","LargeSymbolDraw","_updateSymbolDraw","_finished","someVectorAt","isTangent","DATA_NAME_INDEX","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","_updateLineDraw","isSvg","getLayer","_lastZlevel","_showEffect","_clearLayer","hasEffect","_hasEffet","_isPolyline","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","removeDuplicate","flag","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","afterUpdate","userSetClipPath","currentClipPath","parentClipPath","_children","__storage","addChildrenToStorage","delChildrenFromStorage","_renderList","displayableSortFunc","brushHelper","elementList","fromAxisAreaSelect","oldAxisGroup","_axisGroup","coordSysModel","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","_refreshBrushController","extentLen","enableGlobalPan","panelId","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","removeOnClick","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","activeIntervals","clazzUtil","componentProto","zrLog","GradientManager","addWithoutUpdate","svgElement","gradient","splitList","Breadcrumb","animationUtil","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","createStorage","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","nodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","renderNode","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","storageName","delEls","__tmWillDelete","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_clearController","findTarget","_zoomToNode","onSelect","bgEl","background","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","renderContent","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","contentHeight","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","minChar","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","prepareAnimationWhenNoOld","lastCfg","parentOldX","parentOldY","parentOldBg","zInLevel","zb","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","rawCategoryData","commonLabelModel","labelTextAlign","labelTextVerticalAlign","prevAngle","format","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","ecUtil","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","getSeriesTypeName","displayCnt","dataLabels","keyValues","userConfig","setAreas","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen2","ShadowManager","hasShadow","_shadowDom","_shadowDomId","domChild","blur","stdDx","stdDy","stdDeviation","singleAxisHelper","selfBuilderAttr","SingleAxisView","Animatable","animators","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_whiskerBoxCommon","seriesModelMixin","CandlestickSeries","defaultValueDimensions","color0","borderColor0","animationUpdate","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","includeMainTypes","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","findTargetInfo","coordSyses","rangeOffset","getScales","getDefaultBrushType","getPanelRect","defaultBrushType","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","scales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","decode","json","UTF8Encoding","encodeScale","UTF8Scale","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","setNodePosition","pieLayout","updateController","modelId","$from","IRRELEVANT_EXCLUDES","targetCoordSysModel","topTarget","colorAll","labelDims","EFFECT_RIPPLE_NUMBER","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","BOOST_SIZE_THRESHOLD","LargeSymbolPath","symbolProxy","symbolProxyShape","canBoost","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_traversalHelper","sep","commonLayout","coorX","coorY","finalCoor","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","Draggable","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dispatchToElement","dropTarget","lastDropTarget","_dropTarget","rootDepth","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","isAsc","sortOrder","axisTrigger","collect","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","dirtyPath","__clipTarget","Sub","defaultShape","thisShape","Cartesian","getAxesByScale","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","calculateDataExtent","seriesExtent","fixExtentByAxis","isCategoryAxis","setAxisModel","isRestore","percentWindow","useOrigin","setMinMaxSpan","valueSpan","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","isCartesian","otherAxisModel","boundValue","boundPercent","dataWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","originalLarge","originalProgressive","axesInfo","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","makeKey","axesInfoInCoordSys","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","involveSeries","groupIndex","getLinkGroupIndex","linkGroup","mapper","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","GRADIENT_LEVELS","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","gradientPixels","pixelsSingleState","Uint8ClampedArray","TOUCH_CLICK_DELAY","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mouseout","toElement","relatedTarget","touchstart","_lastTouchMoment","touchmove","touchend","click","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","_handlers","HandlerDomProxy","mountHandlers","handlerNames","handlerDomProxyProto","setCursor","processedMapType","mapSymbolOffsets","subMapSeries","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","SankeySeries","localPosition","rawDataOpt","layoutIterations","makeAction","PROXIMATE_ONE_DAY","Calendar","calendarModel","_rangeInfo","_sw","_sh","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","stackInfoMap","stackInfoList","stackInfo","stackResultDimension","stackedDimension","stackedByDimension","isStackedByIndex","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","legendFilter","SILENT","makeEventPacket","eveType","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","radioTypes","generateNewSeriesTypes","newSeriesOpt","radio","currentType","doCreateNode","urn","win","vmlInited","namespaces","zrvml","initVML","styleSheets","createStyleSheet","addRule","AxisPointerView","_updatePathDirty","vec2Min","vec2Max","v2Copy","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","drawMono","drawNonMono","prevIdx","prevP","ctrlLen","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","LinkedList","linkedListProto","insert","entry","Entry","insertEntry","_list","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","PictorialBarSeries","sunburstLayout","previousZoom","fixX","fixY","cubic","quadratic","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","windingQuadratic","y_","windingArc","containPath","isStroke","_axesLayout","restrict","layoutAxisWithoutExpand","layoutLength","axisCount","axisNameAvailableWidth","axisLabelShow","layoutAxisWithExpand","nameTruncateMaxWidth","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","axisExpandWindow","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","_layoutAxes","winSize","layoutExtent","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","lenj","getActiveState","getSlidedAxisExpandWindow","behavior","pointCoord","triggerArea","useJump","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","treemapVisual","treemapLayout","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","oldName","isUserFeatureName","createIconPaths","iconName","iconPaths","iconStatus","iconStyleModel","iconStyleEmphasisModel","titles","parseInt10","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","_opts","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","createMethodNotSupport","viewportRoot","_paintList","visibleList","listLen","newVisibleList","prevSvgElement","textSvgElement","_getDefs","_getSize","_width","_height","viewportStyle","whIdx","cwh","plt","prb","outerHTML","repeat","createPattern","moveAnimation","propsEqual","lastProp","lastProps","newProps","updateLabelShowHide","labelEl","getHandleTransProps","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","_onHandleDragEnd","includeStyles","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xDimIndex","BoxplotView","constDim","updateNormalBoxData","BoxPath","TimelineModel","SliderTimelineModel","checkpointStyle","playIcon","stopIcon","nextIcon","prevIcon","idStart","colorQuery","opacityQuery","restoreLang","Restore","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","__customPathData","__customImagePath","__customText","__customGraphicType","updateEl","targetProps","targetStyle","prepareStyleTransition","targetOpacity","styleEmphasis","oldElStyle","makeRenderItem","customSeries","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","barLayout","currentSeriesIndices","userParams","dataInsideLength","wrapEncodeDef","currDirty","updateCache","doCreateOrUpdate","elOptionType","diffChildrenByName","diffGroupChildren","processAddUpdate","processRemove","childOption","setIncrementalAndHoverLayer","makeCategoryLabels","makeRealNumberLabels","makeCategoryTicks","makeCategoryLabelsActually","labelCategoryInterval","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","ticksCache","optionTickInterval","labelsResult","rawLabel","cache","autoInterval","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","unitSpan","unitW","unitH","maxW","maxH","lastAutoInterval","lastTickCount","categoryInterval","onlyTick","startTick","showMinMax","addItem","tVal","DUMMY_COMPONENT_NAME_PREFIX","subOpts","subOptName","newCptOptions","cptOption","idMap","existCpt","idNum","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","otherDataIndices","isData","innerUniqueIndex","hostObj","parsedKey","queryType","queryParam","_setting","_isBlank","childCount","_doAdd","addBefore","includeChildren","tmpMat","extremity","xDim","yDim","_baseAxisDim","addOrdinal","xAxisType","yAxisType","baseAxisDimIndex","baseAxisType","otherAxisType","newOptionData","newItem","getNearestColorPalette","paletteNum","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","doneCallback","elExistsMap","fixPosition","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","measureText","getRichTextRect","getPlainTextRect","halfHeight","truncateText","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","ellipsisWidth","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","matchedIndex","pushTokens","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","renderPlanner","Chart","renderTaskPlan","renderTaskReset","toggleHighlight","chartProto","elSetState","progressMethodMap","forceFirstProgress","VMLPainter","vmlViewport","_vmlRoot","_vmlViewport","_firstPaint","__alreadyNotVisible","_getWidth","_getHeight","vmlViewportStyle","seriesItem","replacableOptionKeys","dataBound","contentColor","getTargetSeriesIndices","optionSeriesIndex","isMinMax","optDim","listDimensions","isCalculationCoord","completeSingle","defa","completeInactive","stateExist","stateAbsent","optExist","optAbsent","completeController","symbolExists","symbolSizeExists","modelHelper","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","outputAxesInfo","valItem","highDownKey","lastHighlights","newHighlights","toHighlight","toDownplay","setScrollDataIndex","groupResult","groupSeriesByAxis","groupItem","calculateBase","layoutSingleSeries","boxOffsetList","boxWidthList","axisList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","boxWidth","halfWidth","median","end1","end2","end4","end5","layEndLine","endCenter","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","isLayerValid","__builtin__","isDisplayableCulled","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layerConfig","_needsManuallyCompositing","mainLayer","_domRoot","_hoverlayer","_hoverElements","isSingleCanvas","paintAll","_redrawId","_backgroundColor","__hoverMir","elMirror","hoverElements","hoverLayer","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","error","dTime","prevElClipPaths","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","eachLayer","getLayers","updatePrevLayer","incrementalLayerCount","layerConfig","_zlevel","delLayer","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","upperCaseFirst","group1","replaceReg","replaceMap","&","<",">","\"","'","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","paramsList","seriesLen","alias","formatTplSimple","pad","isUTC","utc","autoPlay","rewind","playInterval","_names","_initData","dataArr","idxArr","positionMap","directionMap","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","stackedDim","targetDim","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","keysFunction","sortKeysFunction","keyFunction","mapObject","valuesByKey","keyValue","entriesMap","sortKeyFunction","mathAtan2","resizeGeo","leftTop","rightBottom","boxLayoutOption","useCenterAndSize","setGeoCoords","geoList","mapData","mapModelGroupBySeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","dataNameMap","pp","friction","v12","nLen","repFact","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","currDistSign","dataSample","treeLayout","diffData","diffResult","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","SingleAxisPointer","getPointDimIndex","ScrollableLegendModel","pageButtonItemGap","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","lineAnimationDiff","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","forSymbol","xExtent","yExtent","createPolarClipShape","createClipShape","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","getVisualGradient","stopLen","tinyExtent","minCoord","maxCoord","coordSpan","getIsIgnoreFunc","isAuto","canShowAllSymbolForCategory","categoryDataDim","labelMap","availSize","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","isIgnoreFunc","__temp","_step","_newPolygon","isIgnore","_stackedOnPoints","_updateAnimation","_newPolyline","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","contrastColor","axisCommon","CartesianAxisView","_splitAreaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","loopGeo","parallelPreprocessor","CLICK_THRESHOLD","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","brushMode","transformable","inBrush","outOfBrush","generateBrushOption","define","Task","_reset","_plan","_onDirty","_dirty","taskProto","planResult","upTask","_upstream","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","_dueEnd","_outputDueEnd","_progress","_dueIndex","doProgress","outputDueEnd","_settedOutputEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","taskIns","_callingProgress","downstream","_downstream","downTask","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","localCursorPoint","TEXT_PADDING","ITEM_GAP","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","lastX","availableSize","getAvailableSize","dataStatistics","statisticType","mapKey","seriesGroups","hostGeoModel","seriesList","symbolCtor","_symbolCtor","symbolDrawProto","normalizeUpdateOpt","SymbolCtor","enableAnimation","PieSeries","hoverOffset","avoidLabelOverlap","HV_NAMES","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","vbox","hbox","containerRect","verticalMargin","horizontalMargin","elPos","targetOption","hResult","vResult","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","boxplotVisual","boxplotLayout","matrixUtil","makeAxisEventDataBase","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","gapSignal","isNameLocationCenter","nameRotation","endTextLayout","truncateOpt","truncatedText","__fullText","__truncatedText","targetType","axisRotation","rotationDiff","textRotate","onLeft","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","tickEl","itemLabelModel","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","dataRange","componentName","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","nw","se","DEFAULT_BRUSH_OPT","baseUID","_brushType","_brushOption","_panels","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","mouseHandlers","doEnableBrush","doDisableBrush","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","getPanelByPoint","panel","panels","pn","getPanelByCover","clearCovers","covers","originalLength","shouldShowCover","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","localD","localZero","xmin","ymin","xmax","ymax","resetCursor","currPanel","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","determineBrushType","coverBrushOption","getCreatingRange","panelOpts","eachCover","brushOptionList","tmpIdPrefix","oldCovers","newCovers","oldGetKey","addOrUpdate","newBrushOption","handleDragEnd","getLineRenderer","localTrack","_radiusAxis","_angleAxis","maxAngle","colorAccessPath","samplers","nearest","indexSampler","sampler","PATH_COLOR","BoxplotSeries","brushLang","Brush","_brushMode","isBrushed","command","styleModel","paddings","confineInContainer","bgColor"],"mappings":"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","file":"assets/js/chunk-f99da5a6.90515710.js","sourcesContent":["var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","var _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"600px\",\"height\":\"400px\"},attrs:{\"id\":\"main\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"main\" style=\"width:600px;height:400px\">\r\n     \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  var echarts = require('echarts');\r\nexport default {\r\n  name: 'Module',\r\n  components: {\r\n    \r\n  },\r\n  data(){\r\n  \treturn {\r\n  \t\t data:'hello world'\r\n  \t}\r\n  },\r\n  methods:{\r\n\r\n  },\r\n  mounted(){\r\n  \t var myChart = echarts.init(document.getElementById('main'));\r\n    //  myChart.setOption({\r\n    //     title: {\r\n    //         text: 'ECharts 入门示例'\r\n    //     },\r\n    //     tooltip: {},\r\n    //     xAxis: {\r\n    //         data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n    //     },\r\n    //     yAxis: {},\r\n    //     series: [{\r\n    //         name: '销量',\r\n    //         type: 'bar',\r\n    //         data: [5, 20, 36, 10, 10, 20]\r\n    //     }]\r\n    // });\r\n     // app.title = '多 X 轴示例';\r\n\r\nvar colors = ['#5793f3', '#d14a61', '#675bba'];\r\n\r\n\r\nvar option = {\r\n    color: colors,\r\n     title: {\r\n            text: '了不起，我的Echarts'\r\n        },\r\n    tooltip: {\r\n        trigger: 'none',\r\n        axisPointer: {\r\n            type: 'cross'\r\n        }\r\n    },\r\n    legend: {\r\n        data:['2015 降水量', '2016 降水量']\r\n    },\r\n    grid: {\r\n        top: 70,\r\n        bottom: 50\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: colors[1]\r\n                }\r\n            },\r\n            axisPointer: {\r\n                label: {\r\n                    formatter: function (params) {\r\n                        return '降水量  ' + params.value\r\n                            + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\r\n                    }\r\n                }\r\n            },\r\n            data: [\"2016-1\", \"2016-2\", \"2016-3\", \"2016-4\", \"2016-5\", \"2016-6\", \"2016-7\", \"2016-8\", \"2016-9\", \"2016-10\", \"2016-11\", \"2016-12\"]\r\n        },\r\n        {\r\n            type: 'category',\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: colors[0]\r\n                }\r\n            },\r\n            axisPointer: {\r\n                label: {\r\n                    formatter: function (params) {\r\n                        return '降水量  ' + params.value\r\n                            + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\r\n                    }\r\n                }\r\n            },\r\n            data: [\"2015-1\", \"2015-2\", \"2015-3\", \"2015-4\", \"2015-5\", \"2015-6\", \"2015-7\", \"2015-8\", \"2015-9\", \"2015-10\", \"2015-11\", \"2015-12\"]\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value'\r\n        }\r\n    ],\r\n    series: [\r\n        {\r\n            name:'2015 降水量',\r\n            type:'line',\r\n            xAxisIndex: 1,\r\n            smooth: true,\r\n            data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\r\n        },\r\n        {\r\n            name:'2016 降水量',\r\n            type:'line',\r\n            smooth: true,\r\n            data: [3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7]\r\n        }\r\n    ]\r\n};\r\nmyChart.setOption(option);\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n \r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Echarts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Echarts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Echarts.vue?vue&type=template&id=279dfc59&scoped=true&\"\nimport script from \"./Echarts.vue?vue&type=script&lang=js&\"\nexport * from \"./Echarts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"279dfc59\",\n  null\n  \n)\n\nexport default component.exports","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar matrix = require(\"../core/matrix\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    if (typeof val === 'string' && val.indexOf('NaN') > -1) {\n      console.log(val);\n    }\n\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation || 0;\n    var transform = matrix.create(); // Apply textRotate to element matrix\n\n    matrix.rotate(transform, el.transform, rotate);\n    setTransform(textSvgEl, transform);\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n      var y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n      var y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    var draggable = seriesModel.get('draggable');\n\n    if (draggable) {\n      nodeData.eachItemGraphicEl(function (el, dataIndex) {\n        el.drift = function (dx, dy) {\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      });\n    }\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n * \n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    zrUtil.each(zeroIndegrees, function (node) {\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n      zrUtil.each(node.outEdges, function (edge) {\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      });\n    });\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // If the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 5e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}